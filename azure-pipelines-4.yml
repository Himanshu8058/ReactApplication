# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - master

pool:
  name: Instances

variables:
  appName: 'React-app'
  azureSubscription: 'Connection-NK'

jobs:
  - job: job1
    displayName: 'Set up node js environment'
    steps:
      - checkout: self
      - task: NodeTool@0
        inputs:
          versionSource: 'spec'
          versionSpec: '16.x'

  - job: job3
    displayName: 'Run Linting'
    dependsOn: job1
    steps:
      - checkout: self
      - script: echo "run lint"
        displayName: 'run linting'

  - job: job4
    displayName: 'Run Unit Test'
    dependsOn: job3
    steps:
      - checkout: self
      - script: echo "run unit test"
        displayName: 'Run Unit Tests'

  - job: job5
    displayName: 'Run Security Scan'
    dependsOn: job4
    steps:
      - checkout: self
      - script: echo "Run security scan"

  - job: job6
    displayName: 'Install and Build'
    dependsOn: job5
    steps:
      - checkout: self
      - task: NodeTool@0
        inputs:
          versionSpec: '16.x'
      - script: |
          npm install
          npm run build
        displayName: 'Install dependencies and build React app'
      - task: CopyFiles@2
        inputs:
          SourceFolder: 'build'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/build'

  - job: job7
    displayName: 'Publish Artifact'
    dependsOn: job6
    steps:
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/build'
          ArtifactName: 'drop'
          publishLocation: 'Container'

  - job: job8
    displayName: 'Deploy to App Service'
    dependsOn: job7
    steps:
      - download: current
        artifact: drop
      - task: AzureRmWebAppDeployment@5
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: 'Connection-NK'
          appType: 'webAppLinux'
          WebAppName: 'React-app-vmss'
          packageForLinux: '$(Pipeline.Workspace)/drop'
          RuntimeStack: 'NODE|20-lts'
          DeploymentTypeLinux: 'oneDeploy'
